#!/bin/sh

# Copyright (c) 2007-2008 Aleksey Cheusov <vle@gmx.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

set -e

. pkg_online_env.sh
. pipestatus

export LC_ALL=C 

usage () {
cat <<EOF
usage: pkg_online_client field:strategy:query
       pkg_online_client -f
       pkg_online_client -s
       pkg_online_client -i pkgname1 [pkgname2...]
OPTIONS:
   -h         display this screen
   -s         display available search strategies
   -f         display available fields for search in
   -i         display information about packages (by PKGNAME)
EOF
}

if test $# -eq 0; then
    usage
    exit 2
fi

while test $# -gt 0; do
    case "$1" in
        -s)
            strats=1;;
        -f)
            dbs=1;;
        -i)
            info=1;;
        -h)
            usage
	    exit 0;;
	-*)
	    printf "Bad option %s\n" "$1" 1>&2
	    exit 1;;
        --)
            shift
	    break;;
	*)
	    break;;
    esac
    shift
done

# temp dir
tmp_dir="/tmp/pkg_online_client.$$"
trap "rm -rf $tmp_dir" 0 1 2 3 15
mkdir -m 700 "$tmp_dir"

#
extract_strat (){
    awk -F'\t' '{printf "%15s - %s\n", $3, $4}'
}

extract_fields (){
    awk -F'\t' -v type="$PKG_SUMMARY_TYPE" '
	$3 ~ ("^pkgsrc-" type "-index") {
	    sub(/^.*-/, "", $3)
	    print $3
	}'
}

extract_pkgname (){
    awk -F'\t' 'NF == 4 {print $4}'
}

run_query (){
    # $1: dbname:strategy:query
    field="`echo $1 | cut -d: -f1`"
    strat="`echo $1 | cut -d: -f2`"
    query="`echo $1 | cut -d: -f3`"

    if test _ = _"$field" -a _ = _"$strat" -a _ = _"$query"; then
	printf 'query format: <field:strategy:query>\n'
	exit 2
    fi

    if test _"$field" = _PKGNAME; then
	dbname="pkgsrc-${PKG_SUMMARY_TYPE}-info"
    else
	dbname="pkgsrc-${PKG_SUMMARY_TYPE}-index-${field}"
    fi

    res_fn=$tmp_dir/result.txt
    log_fn=$tmp_dir/errors.log

    if runpipe0 \
	$PKG_ONLINE_DICT -h "$PKG_ONLINE_SERVER" -p "$PKG_ONLINE_PORT" \
	    -m -f -d "$dbname" -s "$strat" "$query" '|' \
	extract_pkgname '|' sort '|' uniq > "$res_fn" 2> "$log_fn"
   then
	cat "$res_fn"
	return 0
    else
	case "$pipestatus_1" in
	    20)
		echo "No matches found for field:$field strategy:$strat query:$query" 1>&2
		return 20;;
	    *)
		cat "$log_fn" 1>&2
		return $pipestatus_1;;
	esac
    fi
}

decorate_info (){
    awk -F'\t' '
    /^[0-9]+ definition.*found$/ {next} # workaround for bug in `dict -f`

    /^  / {
	print substr($0, 3)
	next
    }

    {
	print "---------------------------------------------------------------------"
    }
    ' "$@"
}

# -s
if test $strats; then
    runpipe0 $PKG_ONLINE_DICT \
	-h "$PKG_ONLINE_SERVER" -p "$PKG_ONLINE_PORT" -P - \
	-f -S '|' extract_strat

    exit 0
fi

# -f
if test $dbs; then
    runpipe0 $PKG_ONLINE_DICT \
	-h "$PKG_ONLINE_SERVER" -p "$PKG_ONLINE_PORT" -P - \
	-f -D '|' extract_fields

    exit 0
fi

# -i
if test $info; then
    for pkgname in "$@"; do
	runpipe0 $PKG_ONLINE_DICT \
	    -h "$PKG_ONLINE_SERVER" -p "$PKG_ONLINE_PORT" -P - \
	    -f -d pkgsrc-"$PKG_SUMMARY_TYPE"-info "$pkgname" '|' \
	decorate_info
    done

    exit 0
fi

# search queries
for q in "$@"; do
    run_query "$q"
done
