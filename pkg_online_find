#!/bin/sh

# Copyright (c) 2007-2008 Aleksey Cheusov <vle@gmx.net>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

set -e

. pkg_online_client.env
. pipestatus

export LC_ALL=C

usage () {
cat <<EOF
usage: pkg_online_find -h
       pkg_online_find -f
       pkg_online_find -s
       pkg_online_find [-1|-3-9|-i] [-r] [-q] query1 [query2 ...]
   where 'queryX' is either plain text query or in 'f:s:q' format,
   'f' here means field name, 's' - search strategy and
   'q' means plain text query
OPTIONS:
   -h         display this screen
   -s         display available search strategies
   -f         display available fields for search in
   -1         display 1-line information about packages (default)
   -3         display short information about packages
   -i|-9      display full information about packages
              (please, do not DOS dict server ;-) )
   -r         raw output in pkg_summary(5) format
   -q         quiet mode, do not print "No matches found" to stderr
EOF
}

while test $# -gt 0; do
    case "$1" in
        -s)
            strats=1;;
        -f)
            fields=1;;
        -i|-9)
            info_type="$info_type -9";;
        -3)
            info_type="$info_type -3";;
        -1)
            info_type="$info_type -1";;
        -r)
            info_type="$info_type -r";;
        -q)
            quiet_mode='-q';;
        -h)
            usage
	    exit 0;;
        --)
            shift
	    break;;
	-*)
	    printf "Bad option %s\n" "$1" 1>&2
	    exit 1;;
	*)
	    break;;
    esac
    shift
done

info_type=${info_type:--1} # the default is one-line information

# temp dir
tmp_dir="/tmp/pkg_online_find.$$"
trap "rm -rf $tmp_dir" 0 1 2 3 15
mkdir -m 700 "$tmp_dir"

# highligting defaults
invert_def_loop (){
    while read def; do
	synonym=`printf '%s\n' "$def" | sed -e 's,^.*__,,' -e 's,=.*,,'`
	fullname=`printf '%s\n' "$def" | sed -e 's,^[^=]*=,,' -e 's,[.],dot,'`
	echo pkg_online_definv_$fullname=$synonym
    done
}

invert_defaults (){
    # $1 - field or strat
    runpipe_re '0 [01] 0' \
	set '|' \
	grep ^pkg_online_$1__ '|' \
	invert_def_loop
}

# -s
highligh_strat_def_loop (){
    while read strat comment; do
	cmd="printf '%7s   %10s   %s\\n' \"\$pkg_online_definv_$strat\" \ '$strat' '$comment'"
	eval "$cmd"
    done
}

highligh_strat_def (){
    eval `invert_defaults strat`
    highligh_strat_def_loop
}

if test $strats; then
    echo 'synonym | full name  | description'
    echo '--------------------------------------'
    runpipe0 $PKG_ONLINE_CLIENT -s '|' highligh_strat_def
    exit 0
fi

# -f
highligh_field_def_loop (){
    while read field; do
	cmd="printf '%7s   %s\\n' \"\$pkg_online_definv_$field\" '$field'"
	eval "$cmd"
    done
}

highligh_field_def (){
    eval `invert_defaults field`
    highligh_field_def_loop
}

if test $fields; then
    echo 'synonym | full name'
    echo '--------------------------'
    runpipe0 $PKG_ONLINE_CLIENT -f '|' highligh_field_def
    exit 0
fi

# searching
if test $# -eq 0; then
    usage
    exit 1
fi

# the following code is for searching
#
grep_count (){
    # args: $1 - count
    awk '$1 == '"$1"' {print $2}'
}

#
intersect (){
    # args: $1 - count
    runpipe0 sort $tmp_dir/with_*.txt '|' uniq -c '|' \
	grep_count "$1"
}

#
subtract (){
    # args: $1 - minuend
    awk -v minuend="$1" '
FILENAME == minuend {
   if (!($0 in without)){
      print $0
   }
   next
}
{
   without [$0] = 1
}
' $tmp_dir/without.txt "$1"
}

# search images...
pkg_online_client__fsq (){
    field=`printf '%s\n' $1 | cut -d: -f1`
    strat=`printf '%s\n' $1 | cut -d: -f2`
    query=`printf '%s\n' $1 | cut -d: -f3`

    # short names for strategies
    if test -z "$strat"; then
	strat=empty
    fi

    synonym="pkg_online_strat__$strat"
    if eval test "\$$synonym"; then
	eval strat=\$$synonym
    fi

    # short names for fields
    if test -z "$field"; then
	field=empty
    fi

    synonym="pkg_online_field__$field"
    if eval test "\$$synonym"; then
	eval field=\$$synonym
    fi

    #
    $PKG_ONLINE_CLIENT $quiet_mode -- "$field:$strat:$query"
}

cnt_with=0
touch $tmp_dir/without.txt $tmp_dir/with_0.txt
for q in "$@"; do
    if printf '%s\n' "$q" | grep '^[!]' > /dev/null; then
	res_fn=$tmp_dir/without.txt
    else
	res_fn=$tmp_dir/with_$cnt_with.txt
	cnt_with=$(($cnt_with+1))
    fi

    q=$(printf '%s\n' "$q" | sed 's/^[!]//')

    if printf '%s\n' "$q" | grep '^[^:]*:[^:]*:[^:]*$' > /dev/null; then
	pkg_online_client__fsq "$q" >> $res_fn
    else
	pkg_online_client $quiet_mode -- "$q" >> $res_fn
    fi
done

no_matches_found (){
    echo "No matches found" 1>&2
    exit 20
}

res_with_fn="$tmp_dir"/res_with
result_fn="$tmp_dir"/result

intersect "$cnt_with" > "$res_with_fn"
if ! test -s "$res_with_fn"; then
    no_matches_found
fi

subtract "$res_with_fn" > "$result_fn"
if ! test -s "$result_fn"; then
    no_matches_found
fi

wrapper (){
    awk -v cols="$COLUMNS" '
{
   if (length($0) >= cols)
      $0 = substr($0, 1, cols-1) ">"

   print $0
}
' "$@"
}

run_pkg_online_client (){
    $PKG_ONLINE_CLIENT $quiet_mode $info_type -- `cat $result_fn`
}

if test -t 1 -a -n "$COLUMNS"; then
    run_pkg_online_client | wrapper
else
    run_pkg_online_client
fi
